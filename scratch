    - name: default interfaces
      nxos_interface:
      interface={{ item }} state=default host={{ inventory_hostname }}
      with_items:
        - Ethernet1/1
        - Ethernet1/2

    # Ensure an interface is a Layer 3 port and that it has the proper description
    - name: config interface
      nxos_interface: interface=Ethernet1/1 description='Configured by Ansible' mode=layer3 host={{ inventory_hostname }}

    #- name: shut an interface
    # Admin down an interface
    #  nxos_interface: interface=Ethernet1/2 admin_state=down host={{ inventory_hostname }}

    - name: BUILD CONFIGS
      template:
        src: vlans.j2
        dest: configs/vlans.cfg

    - name: ENSURE VLANS EXIST
      nxos_config:
        src: configs/vlans.cfg
        provider: "{{ nxos_provider }}"


    - name: Admin down ALL interfaces (physical and logical)
      nxos_interface:
        interface: all
        host: "{{ inventory_hostname }}"
        admin_state: down



---

- name: facts testing
  hosts: n5548-a
  connection: local
  gather_facts: no

  tasks:

  # Admin up an interface
  - name: up an interface
    nxos_interface:
      host: "{{ inventory_hostname }}"
      interface: Ethernet1/6
      admin_state: up
      transport: nxapi
      username: admin
      password: C1sco123!

  # retrieve facts with detailed info for interfaces (from 'show interface status')
  - name: gather interfaces
    nxos_facts:
      host: "{{ inventory_hostname }}"
      gather_subset: interfaces
      transport: nxapi
      username: admin
      password: C1sco123!
    register: interfaces_results

  - debug: var=interfaces_results


  - name: Ensure VLANs exists with the name MASH and is in the up state
    nxos_vlan:
      vlan_range: "2-100,150"
      host: "{{ inventory_hostname }}"
      vlan_state: active
      state: present
      admin_state: up
      username: taruch
      password: C1sco123!
      transport: nxapi








  vars:
    nxos_provider:
      host: "{{ inventory_hostname }}"
      username: admin
      password: C1sco123!
      transport: nxapi
    vlan_data:
      - { id: 3, name: native }
      - { id: 20, name: vlan20 }
      - { id: 21, name: vlan21 }
      - { id: 22, name: vlan22 }
      - { id: 23, name: vlan23 }
      - { id: 24, name: vlan24 }
      - { id: 40, name: vlan24 }
      - { id: 602, name: foo-provider602 }
      - { id: 603, name: foo-provider603 }
      - { id: 604, name: foo-vrf}
      - { id: 1002, name: foo-admin}
      - { id: 1003, name: foo-service}

  tasks:


  - name: Initialize an empty list for our strings
    set_fact:
      updated_vlan_list: []

  - name: Append string to list
    set_fact:
      updated_vlan_list: "{{ updated_vlan_list }} + [ '{{ item.id }}' ]"
    with_items: "{{ vlan_data }}"

  - name: Print new vlan list
    debug: var=updated_vlan_list

  - name: GATHER FACTS TO RECORD VLAN LIST ON NODE
    nxos_facts:
      provider: "{{ nxos_provider }}"

  - name: VLAN LIST ON NODE
    debug: var=vlan_list

  - name: Create to-remove vlan list
    set_fact: to_remove_vlan_list="{{ item }}"
    with_items: "{{ updated_vlan_list | difference(vlan_list) }}"

  - name: CURRENT VLAN LIST
    debug: var=to_remove_vlan_list






  - name: Ensure port is configured to be access port
    nxos_interface:
      provider: "{{ nxos_provider }}"
      interface: "{{ item[0] }}"
      interface_type: portchannel
      mode: layer2
      transport: cli
    with_items: "{{ ports_and_vlans_list['stdout'] }}"

  - name: Ensure interfaces is configured for correct vlans
    nxos_switchport:
      provider: "{{ nxos_provider }}"
      interface: "{{ item[0] }}"
      trunk_allowed_vlans: "{{ item[1] }}"
      mode: trunk
      transport: cli
    with_items: "{{ ports_and_vlans_list['stdout'] }}"





  - name: Initialize an empty list for our strings
    set_fact:
      ports_list: []

  - name: Append string to list
    set_fact:
      ports_list: "{{ ports_list }} + [ '{{ item[0] }}' ]"
    with_items: "{{ ports_and_vlans_list['stdout'] }}"

  - name: print ports_list
    debug:
      var: port_list
      verbosity: 2














  - name: Creating vlans
    nxos_vlan:
      provider: "{{ nxos_provider }}"
      vlan_id: "{{ item.id }}"
      name: "{{ item.name }}"
    with_items: "{{ vlan_data | default([]) }}"


  - name: run my script!
    command: ./scripts/get_portsAndVlans.py
    run_once: true
    register: ports_and_vlans_list

  - name: Modify string to
    set_fact:
      ports_list: "{{ ports_and_vlans_list.stdout | from_json }}"

  - name: CURRENT VLAN LIST
    debug: var=ports_list verbosity=4

  - name: indexed loop demo
    debug: msg="at array position {{ item.port }}"
    with_items: "{{ ports_list }}"

  - name: Ensure port is configured to be access port
    nxos_interface:
      provider: "{{ nxos_provider }}"
      interface: "{{ item.port }}"
      description: "a port"
      mode: layer2
      transport: cli
    with_items: "{{ ports_list }}"

  - name: Ensure interfaces is configured for correct vlans
    nxos_switchport:
      provider: "{{ nxos_provider }}"
      interface: "{{ item.port }}"
      trunk_allowed_vlans: "{{ item.portvlans }}"
      mode: trunk
      transport: cli
    with_items: "{{ ports_list }}"